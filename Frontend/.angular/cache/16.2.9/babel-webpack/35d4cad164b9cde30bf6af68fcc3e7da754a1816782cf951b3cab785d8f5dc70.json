{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../tasks.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = function (a1) {\n  return [\"/update-task/\", a1];\n};\nfunction ListTasksComponent_tr_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"button\", 9)(7, \"a\", 6);\n    i0.ɵɵtext(8, \"Edit\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function ListTasksComponent_tr_23_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const t_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deleteTask(t_r1.id));\n    });\n    i0.ɵɵtext(10, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const t_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(t_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(t_r1.content);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(3, _c0, t_r1.id));\n  }\n}\nconst _c1 = function () {\n  return [\"/add-task/\"];\n};\nexport class ListTasksComponent {\n  constructor(tasksService, router) {\n    this.tasksService = tasksService;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.tasksService.listTasks().subscribe(data => {\n      this.tasks = data.Tasks;\n    });\n  }\n  deleteTask(taskId) {\n    this.tasksService.deleteTasks(taskId).subscribe(data => {\n      setTimeout(() => {\n        this.tasksService.listTasks().subscribe(data => {\n          this.tasks = data.Tasks;\n        });\n      }, 100);\n    });\n  }\n  static #_ = this.ɵfac = function ListTasksComponent_Factory(t) {\n    return new (t || ListTasksComponent)(i0.ɵɵdirectiveInject(i1.TasksService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ListTasksComponent,\n    selectors: [[\"app-list-tasks\"]],\n    decls: 24,\n    vars: 3,\n    consts: [[1, \"container\"], [1, \"row\", \"align-items-start\"], [1, \"col\"], [1, \"\"], [1, \"row\", \"align-items-end\"], [1, \"btn\", \"btn-primary\"], [3, \"routerLink\"], [1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-warning\"], [1, \"btn\", \"btn-danger\", 3, \"click\"]],\n    template: function ListTasksComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"p\");\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"h2\", 3);\n        i0.ɵɵtext(5, \"List of tasks...\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(6, \"p\");\n        i0.ɵɵelementStart(7, \"div\", 4)(8, \"div\", 2)(9, \"button\", 5)(10, \"a\", 6);\n        i0.ɵɵtext(11, \"Add Task\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(12, \"div\", 0)(13, \"table\", 7)(14, \"thead\")(15, \"th\");\n        i0.ɵɵtext(16, \"Product Id\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"th\");\n        i0.ɵɵtext(18, \"Task\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"th\");\n        i0.ɵɵtext(20, \"Action\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(21, \"p\");\n        i0.ɵɵelementStart(22, \"tbody\");\n        i0.ɵɵtemplate(23, ListTasksComponent_tr_23_Template, 11, 5, \"tr\", 8);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(2, _c1));\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n      }\n    },\n    dependencies: [i3.NgForOf, i2.RouterLink],\n    styles: [\"a[_ngcontent-%COMP%]:link, a[_ngcontent-%COMP%]:visited {\\n    color: white;\\n    text-align: center;\\n    text-decoration: none;\\n    display: inline-block;\\n  }\\n\\n  \\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbGlzdC10YXNrcy9saXN0LXRhc2tzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLHFCQUFxQjtJQUNyQixxQkFBcUI7RUFDdkIiLCJzb3VyY2VzQ29udGVudCI6WyJhOmxpbmssIGE6dmlzaXRlZCB7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB9XG5cbiAgXG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ListTasksComponent_tr_23_Template_button_click_9_listener","restoredCtx","ɵɵrestoreView","_r3","t_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","deleteTask","id","ɵɵadvance","ɵɵtextInterpolate","content","ɵɵproperty","ɵɵpureFunction1","_c0","ListTasksComponent","constructor","tasksService","router","ngOnInit","listTasks","subscribe","data","tasks","Tasks","taskId","deleteTasks","setTimeout","_","ɵɵdirectiveInject","i1","TasksService","i2","Router","_2","selectors","decls","vars","consts","template","ListTasksComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","ListTasksComponent_tr_23_Template","ɵɵpureFunction0","_c1"],"sources":["/Users/aakash/To-Do-List-Web-App-using-Flask-and-Angular/Frontend/src/app/list-tasks/list-tasks.component.ts","/Users/aakash/To-Do-List-Web-App-using-Flask-and-Angular/Frontend/src/app/list-tasks/list-tasks.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { TasksService } from '../tasks.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-list-tasks',\n  templateUrl: './list-tasks.component.html',\n  styleUrls: ['./list-tasks.component.css']\n})\nexport class ListTasksComponent {\n  \n  tasks: any;\n\n  constructor(\n    private tasksService: TasksService,\n    private router: Router,\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    this.tasksService.listTasks()\n    .subscribe((data: any) => {\n      this.tasks = data.Tasks;\n    })\n  }\n\n\n  deleteTask(taskId: any): void {\n    this.tasksService.deleteTasks(taskId)\n      .subscribe((data: any) => {\n        setTimeout(() => {\n          this.tasksService.listTasks()\n            .subscribe((data: any) => {\n              this.tasks = data.Tasks;\n            })\n        }, 100);\n      });\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row align-items-start\">\n        <p></p>\n        <div class=\"col\">\n            <h2 class=\"\">List of tasks...</h2>\n        </div>\n        \n    </div>\n    \n    <p></p>\n    <div class=\"row align-items-end\">\n        <div class=\"col\">\n            <button class=\"btn btn-primary\"><a [routerLink]=\"['/add-task/']\">Add Task</a></button>\n        </div>\n    </div>\n</div>\n\n<div class=\"container\">\n    <table class=\"table table-striped\">\n        \n        <thead>\n            <th>Product Id</th>\n            <th>Task</th>\n            <th>Action</th>\n        </thead>\n\n        <p></p>\n\n        <tbody>\n            <tr *ngFor=\"let t of tasks\">\n                <td>{{ t.id }}</td>\n                <td>{{ t.content }}</td>\n                <td>\n                    <button class=\"btn btn-warning\"><a [routerLink]=\"['/update-task/',t.id]\">Edit</a></button>\n                    <button (click)=\"deleteTask(t.id)\" class=\"btn btn-danger\">Delete</button>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}