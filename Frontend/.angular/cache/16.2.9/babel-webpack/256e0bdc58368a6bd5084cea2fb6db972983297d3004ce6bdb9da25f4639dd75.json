{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../tasks.service\";\nconst _c0 = function () {\n  return [\"/list-tasks/\"];\n};\nexport class AddTaskComponent {\n  constructor(fb, router, tasksService) {\n    this.fb = fb;\n    this.router = router;\n    this.tasksService = tasksService;\n    this.angForm = this.fb.group({\n      content: ['', Validators.required],\n      dueDate: ['', Validators.required]\n    });\n  }\n  postdata(angForm) {\n    this.tasksService.addTask(this.angForm.value).pipe(first()).subscribe(data => {\n      this.router.navigate(['list-tasks']);\n    }, error => {});\n  }\n  static #_ = this.ɵfac = function AddTaskComponent_Factory(t) {\n    return new (t || AddTaskComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.TasksService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddTaskComponent,\n    selectors: [[\"app-add-task\"]],\n    decls: 29,\n    vars: 3,\n    consts: [[1, \"container\", \"extra_container\"], [1, \"row\"], [1, \"col\"], [1, \"\"], [1, \"container\", \"text-end\"], [1, \"btn\", \"btn-primary\"], [3, \"routerLink\"], [1, \"container\", \"border\", \"bg-light\"], [\"autocomplete\", \"off\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"align-items-center\"], [\"id\", \"cnt\", 1, \"col-md-4\", \"text-center\"], [1, \"col-md-6\"], [\"type\", \"text\", \"name\", \"content\", \"formControlName\", \"content\", 1, \"form-control\"], [1, \"row\", \"align-items-center\", \"mt-3\"], [\"id\", \"dud\", 1, \"col-md-4\", \"text-center\"], [\"type\", \"date\", \"name\", \"dueDate\", \"formControlName\", \"dueDate\", 1, \"form-control\"], [1, \"col-md-12\", \"text-center\"], [\"type\", \"submit\", \"name\", \"submit\", 1, \"btn\", \"btn-warning\"]],\n    template: function AddTaskComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"head\");\n        i0.ɵɵelement(1, \"title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0)(3, \"div\", 1);\n        i0.ɵɵelement(4, \"p\");\n        i0.ɵɵelementStart(5, \"div\", 2)(6, \"h2\", 3);\n        i0.ɵɵtext(7, \"Add tasks...\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(8, \"div\", 2);\n        i0.ɵɵelementStart(9, \"div\", 2)(10, \"div\", 4)(11, \"button\", 5)(12, \"a\", 6);\n        i0.ɵɵtext(13, \"List of tasks\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(14, \"div\", 7)(15, \"form\", 8);\n        i0.ɵɵlistener(\"ngSubmit\", function AddTaskComponent_Template_form_ngSubmit_15_listener() {\n          return ctx.postdata(ctx.angForm);\n        });\n        i0.ɵɵelementStart(16, \"div\", 9)(17, \"div\", 10);\n        i0.ɵɵtext(18, \"Content\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 11);\n        i0.ɵɵelement(20, \"input\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"div\", 13)(22, \"div\", 14);\n        i0.ɵɵtext(23, \"Due Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 11);\n        i0.ɵɵelement(25, \"input\", 15);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"div\", 13)(27, \"div\", 16);\n        i0.ɵɵelement(28, \"input\", 17);\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(2, _c0));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.angForm);\n      }\n    },\n    dependencies: [i2.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"a[_ngcontent-%COMP%]:link, a[_ngcontent-%COMP%]:visited {\\n    color: white;\\n    text-align: center;\\n    text-decoration: none;\\n    display: inline-block;\\n  }\\n\\n  #cnt[_ngcontent-%COMP%], #dud[_ngcontent-%COMP%] {\\n    font-weight: bold;\\n   }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRkLXRhc2svYWRkLXRhc2suY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIscUJBQXFCO0lBQ3JCLHFCQUFxQjtFQUN2Qjs7RUFFQTtJQUNFLGlCQUFpQjtHQUNsQiIsInNvdXJjZXNDb250ZW50IjpbImE6bGluaywgYTp2aXNpdGVkIHtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIH1cblxuICAjY250LCAjZHVkIHtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgIH0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["Validators","first","AddTaskComponent","constructor","fb","router","tasksService","angForm","group","content","required","dueDate","postdata","addTask","value","pipe","subscribe","data","navigate","error","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","i3","TasksService","_2","selectors","decls","vars","consts","template","AddTaskComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵlistener","AddTaskComponent_Template_form_ngSubmit_15_listener","ɵɵadvance","ɵɵproperty","ɵɵpureFunction0","_c0"],"sources":["/Users/aakash/To-Do-List-Web-App-using-Flask-and-Angular/Frontend/src/app/add-task/add-task.component.ts","/Users/aakash/To-Do-List-Web-App-using-Flask-and-Angular/Frontend/src/app/add-task/add-task.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { TasksService } from '../tasks.service';\nimport { first } from 'rxjs';\n\n@Component({\n  selector: 'app-add-task',\n  templateUrl: './add-task.component.html',\n  styleUrls: ['./add-task.component.css']\n})\nexport class AddTaskComponent {\n  angForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private tasksService: TasksService\n  ) { \n    this.angForm = this.fb.group({\n      content: ['', Validators.required],\n      dueDate: ['', Validators.required]  \n    });\n  }\n\n  postdata(angForm: FormGroup) {\n    this.tasksService.addTask(this.angForm.value)\n      .pipe(first())\n      .subscribe(\n        data => {\n          this.router.navigate(['list-tasks']);\n        },\n        error => {\n          \n        }\n      );\n  }\n}\n","<head>\n  <title></title>\n</head>\n\n<div class=\"container extra_container\">\n    <div class=\"row\">\n      <p></p>\n      <div class=\"col\">\n        <h2 class=\"\">Add tasks...</h2>\n      </div>\n      <div class=\"col\"></div>\n      <div class=\"col\">\n        <div class=\"container text-end\">\n          <button class=\"btn btn-primary\"><a [routerLink]=\"['/list-tasks/']\">List of tasks</a></button>\n        </div> \n      </div>\n    </div>\n  \n    <div class=\"container border bg-light\">\n        <form [formGroup]=\"angForm\" (ngSubmit)=\"postdata(angForm)\" autocomplete=\"off\">\n          <div class=\"row align-items-center\">\n            <div class=\"col-md-4 text-center\" id=\"cnt\">Content</div>\n            <div class=\"col-md-6\"><input type=\"text\" class=\"form-control\" name=\"content\" formControlName=\"content\"></div>\n          </div>\n  \n          <div class=\"row align-items-center mt-3\">\n            <div class=\"col-md-4 text-center\" id=\"dud\">Due Date</div>\n            <div class=\"col-md-6\"><input type=\"date\" class=\"form-control\" name=\"dueDate\" formControlName=\"dueDate\"></div>\n          </div>\n        \n          <div class=\"row align-items-center mt-3\">\n            <div class=\"col-md-12 text-center\"><input type=\"submit\" class=\"btn btn-warning\" name=\"submit\"></div>\n          </div>\n        </form>  \n    </div>\n</div>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}