{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../tasks.service\";\nconst _c0 = function () {\n  return [\"/list-tasks/\"];\n};\nexport class UpdateTaskComponent {\n  constructor(fb, route, tasksService, activeRoute) {\n    this.fb = fb;\n    this.route = route;\n    this.tasksService = tasksService;\n    this.activeRoute = activeRoute;\n    this.angForm = this.fb.group({\n      id: [''],\n      content: ['', Validators.required]\n    });\n    this.subscription = this.activeRoute.paramMap.subscribe(params => {\n      this.id = params.get('id');\n    });\n  }\n  ngOnInit() {\n    this.getSingleTask(this.id);\n  }\n  getSingleTask(id) {\n    this.tasksService.getTaskById(id).subscribe(res => {\n      this.task = res;\n      this.angForm.patchValue(this.task);\n      console.log(res);\n    }, err => {\n      this.error = err;\n    });\n  }\n  editData(f) {\n    console.log(f.value);\n    this.tasksService.updateTask(this.id, f.value).subscribe(res => {\n      this.tasks = res;\n      this.success = \"Updated successfully\";\n      this.route.navigate(['/list-tasks']);\n    }, err => {\n      this.error = err;\n    });\n  }\n  static #_ = this.ɵfac = function UpdateTaskComponent_Factory(t) {\n    return new (t || UpdateTaskComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.TasksService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateTaskComponent,\n    selectors: [[\"app-update-task\"]],\n    decls: 27,\n    vars: 3,\n    consts: [[1, \"container\", \"extra_container\"], [1, \"row\"], [1, \"col\"], [1, \"\"], [1, \"btn\", \"btn-primary\"], [3, \"routerLink\"], [1, \"md-col-12\"], [\"autocomplete\", \"off\", 3, \"formGroup\", \"ngSubmit\"], [\"type\", \"hidden\", \"name\", \"id\", \"formControlName\", \"id\"], [1, \"md-col-6\"], [\"type\", \"text\", \"name\", \"content\", \"formControlName\", \"content\", 1, \"form-control\"], [\"type\", \"submit\", \"name\", \"submit\", \"value\", \"Update\", 1, \"btn\", \"btn-warning\"]],\n    template: function UpdateTaskComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"p\");\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"h2\", 3);\n        i0.ɵɵtext(5, \"Add tasks...\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(6, \"div\", 2);\n        i0.ɵɵelementStart(7, \"div\", 2)(8, \"button\", 4)(9, \"a\", 5);\n        i0.ɵɵtext(10, \"List of tasks\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(11, \"div\", 0);\n        i0.ɵɵelement(12, \"p\");\n        i0.ɵɵelementStart(13, \"div\", 1)(14, \"div\", 6)(15, \"h2\");\n        i0.ɵɵtext(16, \"Update Task...\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(17, \"form\", 7);\n        i0.ɵɵlistener(\"ngSubmit\", function UpdateTaskComponent_Template_form_ngSubmit_17_listener() {\n          return ctx.editData(ctx.angForm);\n        });\n        i0.ɵɵelement(18, \"input\", 8);\n        i0.ɵɵelementStart(19, \"div\", 1)(20, \"div\", 9);\n        i0.ɵɵtext(21, \"Content\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 9);\n        i0.ɵɵelement(23, \"input\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"div\", 1)(25, \"div\", 6);\n        i0.ɵɵelement(26, \"input\", 11);\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(2, _c0));\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formGroup\", ctx.angForm);\n      }\n    },\n    dependencies: [i2.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","UpdateTaskComponent","constructor","fb","route","tasksService","activeRoute","angForm","group","id","content","required","subscription","paramMap","subscribe","params","get","ngOnInit","getSingleTask","getTaskById","res","task","patchValue","console","log","err","error","editData","f","value","updateTask","tasks","success","navigate","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","i3","TasksService","ActivatedRoute","_2","selectors","decls","vars","consts","template","UpdateTaskComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","UpdateTaskComponent_Template_form_ngSubmit_17_listener","ɵɵadvance","ɵɵproperty","ɵɵpureFunction0","_c0"],"sources":["/Users/aakash/To-Do-List-Web-App-using-Flask-and-Angular/Frontend/src/app/update-task/update-task.component.ts","/Users/aakash/To-Do-List-Web-App-using-Flask-and-Angular/Frontend/src/app/update-task/update-task.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TasksService } from '../tasks.service';\n\n@Component({\n  selector: 'app-update-task',\n  templateUrl: './update-task.component.html',\n  styleUrls: ['./update-task.component.css']\n})\nexport class UpdateTaskComponent {\n  angForm : FormGroup;\n  error: any;\n  subscription: any;\n  id: any;\n  task: any;\n  tasks: any;\n  success: string | undefined;\n\n  constructor(\n    private fb: FormBuilder,\n    private route: Router,\n    private tasksService: TasksService,\n    private activeRoute: ActivatedRoute\n  ) {\n\n    this.angForm = this.fb.group({\n      id: [''],\n      content: ['', Validators.required],\n    });\n\n    this.subscription = this.activeRoute.paramMap.subscribe(params => {\n      this.id = params.get('id');\n    })\n  }\n\n  ngOnInit(): void {\n    this.getSingleTask(this.id);\n  }\n\n  getSingleTask(id: any): void {\n    this.tasksService.getTaskById(id)\n      .subscribe((res: any) => {\n        this.task = res;\n        this.angForm.patchValue(this.task);\n        console.log(res);\n      },\n      (err: any) => {\n        this.error = err;\n      });\n  }  \n\n  editData(f: any) {\n    console.log(f.value);\n    this.tasksService.updateTask(this.id, f.value)\n      .subscribe((res: any) => {\n        this.tasks = res;\n        this.success = \"Updated successfully\";\n        this.route.navigate(['/list-tasks']);\n      },\n      (err: any) => {\n        this.error = err;\n      })\n  }\n}\n","<div class=\"container extra_container\">\n    <div class=\"row\">\n        <p></p>\n        <div class=\"col\">\n            <h2 class=\"\">Add tasks...</h2>\n        </div>\n        <div class=\"col\"></div>\n        <div class=\"col\">\n            <button class=\"btn btn-primary\"><a [routerLink]=\"['/list-tasks/']\">List of tasks</a></button>\n        </div>\n</div>\n\n<div class=\"container extra_container\">\n    <p></p>\n    <div class=\"row\">\n        <div class=\"md-col-12\"><h2>Update Task...</h2></div>\n    </div>\n    <form [formGroup]=\"angForm\" (ngSubmit)=\"editData(angForm)\" autocomplete=\"off\">\n        <input type=\"hidden\" name=\"id\" formControlName=\"id\">\n        <div class=\"row\">\n            <div class=\"md-col-6\">Content</div>\n            <div class=\"md-col-6\"><input type=\"text\" class=\"form-control\" name=\"content\" formControlName=\"content\"></div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"md-col-12\"><input type=\"submit\" class=\"btn btn-warning\" name=\"submit\" value=\"Update\"></div>\n        </div>\n    </form>  \n</div>  "],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;;AASnE,OAAM,MAAOC,mBAAmB;EAS9BC,YACUC,EAAe,EACfC,KAAa,EACbC,YAA0B,EAC1BC,WAA2B;IAH3B,KAAAH,EAAE,GAAFA,EAAE;IACF,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,YAAY,GAAZA,YAAY;IACZ,KAAAC,WAAW,GAAXA,WAAW;IAGnB,IAAI,CAACC,OAAO,GAAG,IAAI,CAACJ,EAAE,CAACK,KAAK,CAAC;MAC3BC,EAAE,EAAE,CAAC,EAAE,CAAC;MACRC,OAAO,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACW,QAAQ;KAClC,CAAC;IAEF,IAAI,CAACC,YAAY,GAAG,IAAI,CAACN,WAAW,CAACO,QAAQ,CAACC,SAAS,CAACC,MAAM,IAAG;MAC/D,IAAI,CAACN,EAAE,GAAGM,MAAM,CAACC,GAAG,CAAC,IAAI,CAAC;IAC5B,CAAC,CAAC;EACJ;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACC,aAAa,CAAC,IAAI,CAACT,EAAE,CAAC;EAC7B;EAEAS,aAAaA,CAACT,EAAO;IACnB,IAAI,CAACJ,YAAY,CAACc,WAAW,CAACV,EAAE,CAAC,CAC9BK,SAAS,CAAEM,GAAQ,IAAI;MACtB,IAAI,CAACC,IAAI,GAAGD,GAAG;MACf,IAAI,CAACb,OAAO,CAACe,UAAU,CAAC,IAAI,CAACD,IAAI,CAAC;MAClCE,OAAO,CAACC,GAAG,CAACJ,GAAG,CAAC;IAClB,CAAC,EACAK,GAAQ,IAAI;MACX,IAAI,CAACC,KAAK,GAAGD,GAAG;IAClB,CAAC,CAAC;EACN;EAEAE,QAAQA,CAACC,CAAM;IACbL,OAAO,CAACC,GAAG,CAACI,CAAC,CAACC,KAAK,CAAC;IACpB,IAAI,CAACxB,YAAY,CAACyB,UAAU,CAAC,IAAI,CAACrB,EAAE,EAAEmB,CAAC,CAACC,KAAK,CAAC,CAC3Cf,SAAS,CAAEM,GAAQ,IAAI;MACtB,IAAI,CAACW,KAAK,GAAGX,GAAG;MAChB,IAAI,CAACY,OAAO,GAAG,sBAAsB;MACrC,IAAI,CAAC5B,KAAK,CAAC6B,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;IACtC,CAAC,EACAR,GAAQ,IAAI;MACX,IAAI,CAACC,KAAK,GAAGD,GAAG;IAClB,CAAC,CAAC;EACN;EAAC,QAAAS,CAAA,G;qBArDUjC,mBAAmB,EAAAkC,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,YAAA,GAAAP,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAI,cAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAnB3C,mBAAmB;IAAA4C,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCVhChB,EAAA,CAAAkB,cAAA,aAAuC;QAE/BlB,EAAA,CAAAmB,SAAA,QAAO;QACPnB,EAAA,CAAAkB,cAAA,aAAiB;QACAlB,EAAA,CAAAoB,MAAA,mBAAY;QAAApB,EAAA,CAAAqB,YAAA,EAAK;QAElCrB,EAAA,CAAAmB,SAAA,aAAuB;QACvBnB,EAAA,CAAAkB,cAAA,aAAiB;QACsDlB,EAAA,CAAAoB,MAAA,qBAAa;QAAApB,EAAA,CAAAqB,YAAA,EAAI;QAIhGrB,EAAA,CAAAkB,cAAA,cAAuC;QACnClB,EAAA,CAAAmB,SAAA,SAAO;QACPnB,EAAA,CAAAkB,cAAA,cAAiB;QACclB,EAAA,CAAAoB,MAAA,sBAAc;QAAApB,EAAA,CAAAqB,YAAA,EAAK;QAElDrB,EAAA,CAAAkB,cAAA,eAA8E;QAAlDlB,EAAA,CAAAsB,UAAA,sBAAAC,uDAAA;UAAA,OAAYN,GAAA,CAAAzB,QAAA,CAAAyB,GAAA,CAAA7C,OAAA,CAAiB;QAAA,EAAC;QACtD4B,EAAA,CAAAmB,SAAA,gBAAoD;QACpDnB,EAAA,CAAAkB,cAAA,cAAiB;QACSlB,EAAA,CAAAoB,MAAA,eAAO;QAAApB,EAAA,CAAAqB,YAAA,EAAM;QACnCrB,EAAA,CAAAkB,cAAA,cAAsB;QAAAlB,EAAA,CAAAmB,SAAA,iBAAiF;QAAAnB,EAAA,CAAAqB,YAAA,EAAM;QAGjHrB,EAAA,CAAAkB,cAAA,cAAiB;QACUlB,EAAA,CAAAmB,SAAA,iBAA0E;QAAAnB,EAAA,CAAAqB,YAAA,EAAM;;;QAjBpErB,EAAA,CAAAwB,SAAA,GAA+B;QAA/BxB,EAAA,CAAAyB,UAAA,eAAAzB,EAAA,CAAA0B,eAAA,IAAAC,GAAA,EAA+B;QASpE3B,EAAA,CAAAwB,SAAA,GAAqB;QAArBxB,EAAA,CAAAyB,UAAA,cAAAR,GAAA,CAAA7C,OAAA,CAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}